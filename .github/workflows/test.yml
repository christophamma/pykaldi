name: Build and Test PyKaldi

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        overprovision-lvm: 'true'
        
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install virtualenv
        python -m virtualenv pykaldi_env
        pykaldi_env/bin/python3 -m pip install numpy pyparsing ninja wheel
        # Kaldi dependencies
        sudo apt-get update
        sudo apt-get install sox
    - name: Check dependencies
      run: |
        source pykaldi_env/bin/activate
        cd tools
        ./check_dependencies.sh
    - name: Build protobuf
      run: |
        source pykaldi_env/bin/activate
        cd tools
        ./install_protobuf.sh
    - name: Build clif
      run: |
        source pykaldi_env/bin/activate
        cd tools
        ./install_clif.sh
    - name: Build kaldi
      run: |
        sudo apt-get install python2.7
        source pykaldi_env/bin/activate
        cd tools
        git clone -b pykaldi_02 https://github.com/pykaldi/kaldi.git
        cd kaldi/tools
        git pull
        cd extras
        sudo ./install_mkl.sh
        cd ../../..
        ./install_kaldi.sh
    - name: Build PyKaldi and Wheel
      run: |
        source pykaldi_env/bin/activate
        python3 setup.py install
        python3 setup.py bdist_wheel
    - name: Test PyKaldi
      run: |
        source pykaldi_env/bin/activate
        python3 setup.py test
    - name: Archive wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: |
          dist
    - name: Upload PyKaldi
      run: |
        find dist -type f -exec curl --netrc --user $FTP_USER:$FTP_PW --ftp-create-dirs -T {} ftp://$FTP_DOMAIN:990/public/ -k --ftp-ssl \;
      env:
        FTP_USER : ${{ secrets.FTP_USERNAME }}
        FTP_PW : ${{ secrets.FTP_PASSWORD }}
        FTP_DOMAIN : ${{ secrets.FTP_DOMAIN }}
